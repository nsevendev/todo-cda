name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      # variable ecris en dur pour les tests
      HTTP_PORT: 65011
      HTTPS_PORT: 65012
      HTTP3_PORT: 65013
      POSTGRES_PORT: 53934
      DATABASE_URL: "postgresql://tocda:tocda@database:5432/tocda_test?serverVersion=16&charset=utf8"
      POSTGRES_VERSION: 16
      POSTGRES_DB: tocda
      POSTGRES_USER: tocda
      POSTGRES_PASSWORD: tocda

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker images
        run: docker compose -f compose.yaml -f compose.override.yaml build --pull --no-cache

      - name: Start Docker services
        run: docker compose -f compose.yaml -f compose.override.yaml up -d

      - name: Wait for Database to be Ready
        run: |
          until docker compose exec -T database pg_isready -U $POSTGRES_USER; do
            echo "Waiting for database...";
            sleep 5;
          done
          
      - name: Run Create database test
        run: docker compose exec php composer migration-bdd-test
        
      - name: Run Composer Check
        run: docker compose exec php composer check

      - name: Shut Down Docker Containers
        if: always()
        run: docker compose -f compose.yaml -f compose.override.yaml down --remove-orphans
